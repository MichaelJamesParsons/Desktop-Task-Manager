<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Sidebar navigation item -->
    <Style x:Key="SidebarNavItem" TargetType="Button">
        <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
        <Setter Property="Padding" Value="12"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Border" 
                                CornerRadius="0" 
                                BorderThickness="0" 
                                Focusable="False" 
                                BorderBrush="Transparent"
                                Background="Transparent" 
                                Padding="{TemplateBinding Padding}">
                        <ContentPresenter Margin="2" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                              RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation From="Transparent" 
                                                        To="#cccccc" 
                                                        Duration="0:0:0" 
                                                        Storyboard.TargetName="Border" 
                                                        Storyboard.TargetProperty="Background.Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation From="#cccccc" 
                                                        To="Transparent" 
                                                        Duration="0:0:0" 
                                                        Storyboard.TargetName="Border" 
                                                        Storyboard.TargetProperty="Background.Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Tray control items -->
    <Style x:Key="TrayControlItem" TargetType="Button">
        <Setter Property="Foreground" Value="#66a3b9"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
        <Setter Property="Padding" Value="12"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Border" 
                                CornerRadius="0" 
                                BorderThickness="0" 
                                Focusable="False" 
                                BorderBrush="Transparent"
                                Background="Transparent" 
                                Padding="{TemplateBinding Padding}">
                        <TextBlock x:Name="InnerContent">
                            <ContentPresenter Margin="2" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                RecognizesAccessKey="True"/>
                        </TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Tray task label -->
    <Style x:Key="TrayTaskLabel" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#fff"></Setter>
        <Setter Property="Padding" Value="12"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>

    <!-- Tray timer -->
    <Style x:Key="TrayTimer" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#fff"></Setter>
        <Setter Property="Padding" Value="12"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>

    <!-- Dashboard Heading -->
    <Style x:Key="DashboardHeading" TargetType="StackPanel">
        <Setter Property="Margin" Value="20, 20, 0, 0"/>
        <Setter Property="Height" Value="auto"/>
    </Style>

    <!-- Dashboard Heading Left -->
    <Style x:Key="DashboardHeadingLeft" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#fff"/>
        <Setter Property="FontSize" Value="60"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <!-- Dashboard Heading Right -->
    <Style x:Key="DashboardHeadingRight" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#216897"/>
        <Setter Property="FontSize" Value="60"/>
        <Setter Property="FontWeight" Value="Thin"/>
    </Style>

    <!-- Dashboard Heading Tagline -->
    <Style x:Key="DashboardHeadingTagline" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="FontSize" Value="30"/>
        <Setter Property="FontWeight" Value="Thin"/>
        <Setter Property="Margin" Value="20, 0, 0, 0"/>
    </Style>
    
    <!-- Page Header -->
    <Style x:Key="PageTitle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#333333"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="FontWeight" Value="Thin"/>
        <Setter Property="Margin" Value="20, 0, 0, 0"/>
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="VerticalAlignment" Value="Top"></Setter>
        <Setter Property="Margin" Value="25, 25, 0, 0"></Setter>
    </Style>
    
    <!-- Textarea -->
    <Style x:Key="TextInput" TargetType="{x:Type FrameworkElement}">
        <Setter Property="TextElement.FontSize" Value="14"></Setter>
        <Setter Property="TextElement.FontWeight" Value="100"></Setter>
        <Setter Property="TextBox.Padding" Value="10"></Setter>
        <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
        <Setter Property="TextBox.Background" Value="Transparent"></Setter>
        <Setter Property="TextBox.BorderBrush" Value="#e1e1e1"></Setter>
        <Setter Property="TextBox.BorderThickness" Value="2"></Setter>
    </Style>
    
    <!-- Nested textarea -->
    <Style x:Key="NestedTextInput" TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextInput}">
        <Setter Property="TextBox.BorderBrush" Value="Transparent"></Setter>
        <Setter Property="TextBox.BorderThickness" Value="0"></Setter>
    </Style>
    
    <!-- Form Field Label -->
    <Style x:Key="FormFieldLabel" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="0, 5, 0 5"></Setter>
        <Setter Property="FontSize" Value="12"></Setter>
        <Setter Property="FontWeight" Value="700"></Setter>
    </Style>

    <Style x:Key="TaskListItemLabel" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="FontWeight" Value="400"></Setter>
        <Setter Property="Margin" Value="0,16,0,0"></Setter>
    </Style>


    <!-- Tasks list control buttons -->
    <Style x:Key="TasksListControlBtn" TargetType="Button">
        <Setter Property="Foreground" Value="#66a3b9"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
        <Setter Property="Padding" Value="12"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" 
                                CornerRadius="0" 
                                BorderThickness="0" 
                                Focusable="False" 
                                BorderBrush="Transparent"
                                Background="Transparent" 
                                Padding="{TemplateBinding Padding}">
                        <TextBlock x:Name="InnerContent">
                            <ContentPresenter Margin="2" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                RecognizesAccessKey="True"/>
                        </TextBlock>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#d0d0d0"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    <!-- Task list loading animations -->
    <Style x:Key="TaskListLoadingIcon" TargetType="{x:Type Image}">
        <Setter Property="Width" Value="40"></Setter>
        <Setter Property="Height" Value="40"></Setter>
        <Setter Property="Margin" Value="20"></Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsLoadingTasks}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                    Storyboard.TargetProperty="(Image.Opacity)"
                                    From="0.0" To="1.0" Duration="0:0:0.5"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsLoadingTasks}" Value="False">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                    Storyboard.TargetProperty="(Image.Opacity)"
                                    From="1.0" To="0.0" Duration="0:0:0.5"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TasksListView" TargetType="{x:Type ListView}">
        <Setter Property="Margin" Value="0, 0,0,0"></Setter>
        <Setter Property="Opacity" Value="0"></Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsLoadingTasks}" Value="False">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                    Storyboard.TargetProperty="(ListView.Opacity)"
                                    From="0.0" To="1.0" Duration="0:0:0.8" BeginTime="00:00:01"/>

                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" BeginTime="00:00:01">
                                <SplineThicknessKeyFrame KeyTime="00:00:00" Value="0, 0, 0, 0" />
                                <SplineThicknessKeyFrame KeyTime="00:00:0.6" Value="0, -80,0,0" />
                            </ThicknessAnimationUsingKeyFrames>

                        </Storyboard>
                    </BeginStoryboard>

                </DataTrigger.EnterActions>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsLoadingTasks}" Value="True">

                <DataTrigger.EnterActions>
                    <!--<BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                    Storyboard.TargetProperty="(ListView.Opacity)"
                                    From="1.0" To="0.0" Duration="0:0:0.0" BeginTime="00:00:00"/>

                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" BeginTime="00:00:00">
                                <SplineThicknessKeyFrame KeyTime="00:00:00" Value="0, -80,0,0" />
                                <SplineThicknessKeyFrame KeyTime="00:00:0.0" Value="0, 0,0,0" />
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>-->
                </DataTrigger.EnterActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>